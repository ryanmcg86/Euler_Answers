'''Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. 
The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. 
However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum 
and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
Link: https://projecteuler.net/problem=44'''

#Imports
import time

#Build a pentagonals function
def P(n):
    return (n * ((3 * n) - 1)) / 2
    
#Build an isPentagonal function
#Note: this was derived by using the quadratic
#formula on the initial equation, (n(3n - 1)) / 2
#and getting a = 3/2, b = -1/2, and c = -n
def isP(n):
    ans = (0.5 + (0.25 + (6 * n))**0.5) / 3
    return ans == int(ans)

#Build a solve function
def solve():
    #Define variables
    start             = time.time()
    j                 = 2
    notfound          = True
    ans, J, K, Pj, Pk = 0, 0, 0, 0, 0
  
    #For every pentagonal, check every
    #pentagonal below it for the given condition.
    #Since we're looking for the smallest difference,
    #we start at P(k) = P(j - 1) and work our way down.
    #Note: since pentagonal numbers grow O(n^2), as they
    #get larger, the differences between any two grow as
    #well, therefore, the first set we find that fulfill
    #the requirements is necessarily the smallest
    #possible difference, and thus, our answer.
    while notfound:
        for k in range(j - 1, 0, -1):
            Pk = P(k)
            Pj = P(j)
            D  = abs(Pk - Pj)
            if isP(Pk + Pj) and isP(D):
                ans      = str(D)
                Pj       = str(Pj)
                Pk       = str(Pk)
                J        = str(j)
                K        = str(k)
                notfound = False
                break
        j += 1
    
    #Print the results
    print 'When j = ' + J + ' and k = ' + K + '; P(j) = ' + Pj + ', '
    print 'P(k) = ' + Pk + ', the sum and difference of P(k) '
    print 'and P(j) are pentagonal, and D, which both equals '
    print '|P(k) - P(j)|, and is minimized, equals ' + ans + '.'
    print 'This took ' + str(time.time() - start) + ' seconds to calculate.'

#Run the program
solve()
