'''Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
Link: https://projecteuler.net/problem=2'''

#Imports
import time

#Run function
def run(n):
    start = time.time()
    fibSeq = [1, 2]
    sumOfTerms = 0
    
    while fibSeq[len(fibSeq) - 1] < n:
        num1 = fibSeq[len(fibSeq) - 1]
        num2 = fibSeq[len(fibSeq) - 2]
        num  = num1 + num2
        fibSeq.append(num)
    fibSeq = fibSeq[:-1]
    
    for i in range(1, len(fibSeq), 3):
        sumOfTerms += fibSeq[i]
        
    print 'The sum of the even-valued terms in the Fibonacci sequence below ' + str(n) + ' is ' + str(sumOfTerms) + '.'
    print 'This was calculated in ' + str(time.time() - start) + ' seconds.'

#Run the program
n = 4000000
run(n)
