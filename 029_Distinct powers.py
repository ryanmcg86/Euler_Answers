'''Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

2^2 = 4, 2^3 = 8, 2^4 = 16, 2^5 = 32
3^2 = 9, 3^3 = 27, 3^4 = 81, 3^5 = 243
4^2 = 16, 4^3 = 64, 4^4 = 256, 4^5 = 1024
5^2 = 25, 5^3 = 125, 5^4 = 625, 5^5 = 3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
Link: https://projecteuler.net/problem=29'''

#Imports
import time
from math import ceil, floor, sqrt

#Build a gcd function
def gcd(x, y):
    while y != 0:
        a = x
        x = y
        y = a % y
    return x

#Build a count function
def count(n):
    poss, maxp, pv = (n - 1)**2, 0, 1
    while True:
        pv <<= 1
        if pv > n: break
        else: maxp += 1
    arr = [0] * (maxp + 1)
    for nthP in range(2, maxp + 1):
        sptrftp = set()
        for intsubp in range(1, nthP):
            goupto = (n * intsubp) / nthP
            inti = intsubp / gcd(intsubp, nthP)
            intv = intsubp
            if intsubp == 1: intv = 2
            while intv <= goupto:
                sptrftp.add(intv)
                intv += inti
        arr[nthP] = len(sptrftp)
    for a in range(2, n + 1):
        for p in range(maxp, 1, -1):
            appnroot = a**(1.0 / p)
            exroot = -1
            if  floor(appnroot)**p == a: exroot = int(floor(appnroot))
            elif ceil(appnroot)**p == a: exroot = int(ceil(appnroot))
            if exroot != -1:
                exnrootsqrt = int(sqrt(exroot))
                if exnrootsqrt**2 != exroot:
                    poss -= arr[p]
                    break
    return poss

#Build a answer function
def answer(expMax):
    start = time.time()
    
    pows = str(count(expMax))
    a = '2 <= a <= ' + str(expMax)
    b = '2 <= b <= ' + str(expMax)
    
    print('There are ' + pows + ' distinct terms in the sequence ')
    print('generated by a^b for ' + a + ' and ' + b + '.')
    print('This took ' + str(time.time() - start) + ' seconds to calculate.')
    
#Run the program
expMax = 100
answer(expMax)
