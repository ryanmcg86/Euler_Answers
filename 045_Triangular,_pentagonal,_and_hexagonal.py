'''Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	T(n) = n(n+1)/2	 	  1, 3, 6 , 10, 15, ...
Pentagonal	 	P(n) = n(3n−1)/2	  1, 5, 12, 22, 35, ...
Hexagonal	 	H(n) = n(2n−1)	 	  1, 6, 15, 28, 45, ...
It can be verified that T(285) = P(165) = H(143) = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
Link: https://projecteuler.net/problem=45'''

#Imports
import time

#Build a Triangle function
def Tri(n):
    return (n * ((3 * n) - 1)) / 2
    
#Build an isPentagonal function
#Note: this was derived by using the quadratic
#formula on the initial equation, (n(3n - 1)) / 2
#and getting a = 3, b = -1, and c = -2n
def isPen(n):
    ans = (1 + (1 + (24 * n))**0.5) / 6
    return ans == int(ans)
    
#Build an isHexagonal function
#Note: this is also derived using the quadratic formula
def isHex(n):
    ans = (1 + (1 + (8 * n))**0.5) / 4
    return ans == int(ans)

#Build a solve function
def solve():
    #Define variables
    start = time.time()
    ans   = 0
    i     = 286
    while 1:
        num = Tri(i)
        if isPen(num) and isHex(num):
            ans = str(num)
            i   = str(i)
            break
        i += 1
    
    #Print the results
    print 'The next triangle number after T(285) = 40755 that is also '
    print 'pentagonal and hexagonal is T(' + i + ') = ' + ans + '.'
    print 'This took ' + str(time.time() - start) + ' seconds to calculate.'

#Run the program
solve()

'''
The Quadratic Equation is X = (-b +- sqrt(b^2 - 4ac)) / 2a, where a, b, and c are derived from the original equation 
when converted into the form: ax^2 + bx + c = 0. To figure out what the function for a 'isPentagonal' needs to be, 
we take the original equation, n(3n−1)/2, and convert it into the correct form:

n(3n - 1) / 2 = x
(3n^2 - n) / 2 = x
3n^2/2 - n/2 = x
3n^2/2 - n/2 - x = 0
2(3n^2/2) - 2(n/2) - 2(x) = 2(0)
3n^2 - n - 2x = 0

Then we derive the a, b, and c values from the converted equation:

a = 3
b = -1
c = -2x

And finally we apply the quadratic equation using these a, b, and c values:

X = (-b +- sqrt(b^2 - 4ac)) / 2a

X = (-(-1) +- sqrt((-1)^2 - 4(3)(-2x))) / 2(3)

X = (1 +- sqrt(1 + 24x)) / 6

This final equation tells us that for any x, if the resultant X is an integer, then x is a pentagonal number. 
Since pentagonals can only be positive, we only need the version of this equation that adds, so we end up with: 

def isPen(n):
    ans = (1 + (1 + (24 * n))**0.5) / 6
    return ans == int(ans)

Following the same logic as above, to figure out what the 'is Hexagonal' function needs to be, we do the following:

n(2n−1) = x
2n^2 - n = x
2n^2 - n - x = 0

Therefore,

a = 2
b = -1
c = -x

Plugging these values into the quadratic equation, we get:

X = (-b +- sqrt(b^2 - 4ac)) / 2a

X = (-(-1) +- sqrt((-1)^2 - 4(2)(-x))) / 2(2)

X = (1 +- sqrt(1 + 8x)) / 4

And since we only need the positive values of this equation, we end up with:

def isHex(n):
    ans = (1 + (1 + 8 * n)**0.5) / 4
    return ans == int(ans)
'''
